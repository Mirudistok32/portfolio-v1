{"version":3,"sources":["assets/images/projects/click-me-game.webp","assets/images/projects/increment-way.webp","assets/images/projects/generator-password.webp","Route.ts","components/Images/Images.tsx","components/pages/Home/Home.tsx","components/utils/ErrorPath/ErrorPath.tsx","components/Navigation/DownArrowSVG/DownArrowSVG.tsx","components/Navigation/Navigation.tsx","redux/selectors/navigation-selector.ts","redux/reducers/navigation-reducer.ts","components/Navigation/ContainerNavigation.tsx","components/Subtitle/Subtitle.tsx","components/Title/Title.tsx","components/TitleHeader/TitleHeader.tsx","components/Element/Element.tsx","components/pages/About/About.tsx","redux/selectors/about-selector.ts","components/pages/About/ContainerAbout.tsx","forms/ContactFeedbackForm/ContactFeedbackForm.tsx","components/pages/Contact/Contact.tsx","api/api-settings.ts","api/send-messages-api.ts","redux/reducers/contact-reducer.ts","redux/selectors/contact-selector.ts","components/pages/Contact/ContainerContact.tsx","components/pages/PortfolioElement/PortfolioElement.tsx","components/pages/Portfolio/Portfolio.tsx","redux/selectors/portfolio-selector.ts","components/pages/Portfolio/ContainerPortfolio.tsx","App.tsx","redux/reducers/portfolio-reducer.ts","redux/reducers/about-reducer.ts","redux/store.ts","index.tsx","components/pages/About/About.module.scss","components/pages/Contact/Contact.module.scss","components/Navigation/Navigation.module.scss","components/pages/Home/Home.module.scss","components/pages/PortfolioElement/PortfolioElement.module.scss","components/utils/ErrorPath/ErrorPath.module.scss","components/Subtitle/Subtitle.module.scss","assets/images/photos/photoForAvatar.webp","forms/ContactFeedbackForm/ContactFeedbackForm.module.scss","components/Images/Images.module.scss","components/Navigation/DownArrowSVG/DownArrowSVG.module.scss","components/Title/Title.module.scss","components/pages/Portfolio/Portfolio.module.scss","components/TitleHeader/TitleHeader.module.scss","components/Element/Element.module.scss"],"names":["module","exports","PATH","Images","React","memo","props","src","alt","title","link","className","s","image","image__link","to","image__photo","Home","home","home__wrap","home__photo","myPhoto","home__content","ErrorPath","children","darkColor","lightColor","mainClass","push","join","DownArrowSVG","colorArrow","colorBody","onClick","classNameForArrow","classNameForBody","classMain","classArrow","classBody","e","version","xmlns","viewBox","fill","d","Navigation","isOpen","toggleOpenNavList","navElements","listClass","navigation__list","listButtonClass","navigation__btn","listElementClass","elements","useMemo","map","item","key","v4","activeClassName","toLocaleUpperCase","onClickDownArrowHandler","useCallback","navigation","color","getNavigationIsOpenSelect","state","navigationReducer","isOpenNav","getNavigationNavElementsSelect","initialState","actionsNavigationReducer","is","type","payload","ContainerNavigation","dispatch","useDispatch","useSelector","Subtitle","subtitle","title__line","title__text","Title","renderFirstWord","split","slice","renderSecondWord","title__first","title__second","TitleHeader","Element","value","isLink","element","href","target","rel","About","infoDates","listSkillsDates","renderInfoDates","i","id","renderListSkillsDates","style","backgroundColor","about","about__wrap","about__line","about__skills","getAboutInfoDatesSelector","aboutReducer","getListSkillsDatesSelector","ContainerAbout","compose","connect","ContactFeedbackForm","onSubmit","formikConfig","initialValues","name","email","description","values","resetForm","validationSchema","Yup","required","max","formik","useFormik","form","handleSubmit","form__row","form__title","errors","form__name","onChange","handleChange","form__email","form__description","onBlur","currentTarget","trim","minHeight","onBluerHandler","onScroll","scrollHeight","height","onScrollHandler","onChangeHandlerTextarea","form__button","Contact","onSubmitContactFeedbackForm","contactElements","renderContactElements","contact__link","linkTitle","contact","contact__wrap","contact__content","contact__mainlinks","contact__form","instance","Axios","create","baseURL","sendMessagesApi","message","post","then","data","status","Error","statusText","catch","console","log","isLoading","actionsContactReducer","getContactArrayElements","contactReducer","ContainerContact","sendMessage","a","sendMessagesInTelegramChatThunk","getDataFromForm","PortfolioElement","mainTitle","listsInfo","urlImages","linkImage","renderElement","l","keyTitle","valueTitle","Portfolio","portfolioInfoProjectDatas","renderElements","elem","linkImages","portfolio","portfolio__wrap","portfolio__content","getPortfolioInfoProjectDatasSelector","portfolioReducer","ContainerPortfolio","App","exact","path","render","generatorPassword","clickMeGame","incrementWay","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ed86d9de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click-me-game.2434e2ca.webp\";","module.exports = __webpack_public_path__ + \"static/media/increment-way.f0f49128.webp\";","module.exports = __webpack_public_path__ + \"static/media/generator-password.2314beb3.webp\";","export const PATH = {\r\n    empty: '/',\r\n    home: '/home',\r\n    about: '/about',\r\n    portfolio: '/portfolio',\r\n    contact: '/contact',\r\n    error: '/error'\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Images.module.scss'\r\n\r\ntype PropsType = {\r\n    src: string,\r\n    alt?: string,\r\n    title?: string,\r\n    link: string\r\n}\r\n\r\nexport const Images: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { src, alt, title, link } = props\r\n\r\n    return (\r\n        <div className={s.image}>\r\n            <NavLink className={s.image__link} to={link} title={title}>\r\n                <img className={s.image__photo} src={src} alt={alt} />\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Home.module.scss'\r\nimport myPhoto from '../../../assets/images/photos/photoForAvatar.webp'\r\nimport { PATH } from '../../../Route'\r\nimport { Images } from '../../Images/Images'\r\n\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport const Home: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={s.home}>\r\n            <div className={s.home__wrap}>\r\n                <div className={s.home__photo}>\r\n                    <Images src={myPhoto} alt={'my photo'} title={'about me'} link={PATH.about} />\r\n                </div>\r\n                <div className={s.home__content}>\r\n                    <div className={s['home__content-hi']}>Hi `<span>everybody</span>`!</div>\r\n                    <div className={s['home__content-name']}>I'm <span>Postnikov Stanislav</span></div>\r\n                    <div className={s['home__content-about']}>\r\n                        I'm Frontend Developer!\r\n                        I live in the Sankt-Petersburg.\r\n                        I like to write code and create understandably web-applications.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './ErrorPath.module.scss'\r\n\r\ntype PropsType = {\r\n    darkColor?: boolean\r\n    lightColor?: boolean\r\n}\r\n\r\nexport const ErrorPath: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { children, darkColor, lightColor } = props\r\n\r\n    const mainClass = [s['error-path']]\r\n    if (darkColor && !lightColor) mainClass.push(s['dark-color'])\r\n    if (!darkColor && lightColor) mainClass.push(s['light-color'])\r\n    if (darkColor && lightColor) mainClass.push(s['light-color'])\r\n\r\n\r\n    return (\r\n        <div className={mainClass.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n})","import React, { MouseEvent } from 'react'\r\nimport s from './DownArrowSVG.module.scss'\r\n\r\ntype PropsType = {\r\n    colorArrow?: string\r\n    colorBody?: string\r\n    height?: number\r\n    weigth?: number\r\n    classNameForBody?: string\r\n    classNameForArrow?: string\r\n    onClick?: (e: MouseEvent<SVGSVGElement>) => void\r\n}\r\n\r\nexport const DownArrowSVG: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const {\r\n        colorArrow = '#FAFAFA',\r\n        colorBody = '#2196F3',\r\n        onClick,\r\n        classNameForArrow,\r\n        classNameForBody\r\n    } = props\r\n\r\n\r\n    const classMain = [s['down-arrow']]\r\n    const classArrow = [s['down-arrow__arw']]\r\n    const classBody = [s['down-arrow__body']]\r\n\r\n    const onClickHandler = (e: MouseEvent<SVGSVGElement>) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n    if (classNameForArrow) classArrow.push(classNameForArrow)\r\n    if (classNameForBody) classArrow.push(classNameForBody)\r\n\r\n    return (\r\n        <svg\r\n            className={classMain.join(' ')}\r\n            onClick={onClickHandler}\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 490.667 490.667\"\r\n        >\r\n            <path\r\n                className={classBody.join('')}\r\n                fill={colorBody}\r\n                d=\"M245.333,0C109.839,0,0,109.839,0,245.333s109.839,245.333,245.333,245.333\r\n\t            s245.333-109.839,245.333-245.333C490.514,109.903,380.764,0.153,245.333,0z\"\r\n            />\r\n            <path\r\n                className={classArrow.join('')}\r\n                fill={colorArrow}\r\n                d=\"M317.867,221.867l-19.2,19.2V117.333c0-29.455-23.878-53.333-53.333-53.333S192,87.878,192,117.333\r\n                v123.584l-19.2-19.2c-19.139-18.289-49.277-18.289-68.416,0c-18.889,18.894-18.889,49.522,0,68.416l118.251,118.251\r\n                c12.496,12.492,32.752,12.492,45.248,0l118.251-118.251c18.889-18.894,18.889-49.522,0-68.416\r\n                C366.975,203.565,336.946,203.631,317.867,221.867z\"\r\n            />\r\n        </svg>\r\n    )\r\n})","import React, { useCallback, useMemo } from 'react'\r\nimport s from './Navigation.module.scss'\r\nimport { DownArrowSVG } from './DownArrowSVG/DownArrowSVG'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { NavElementType } from '../../redux/reducers/navigation-reducer'\r\nimport { v4 } from 'uuid'\r\n\r\n\r\ntype PropsType = {\r\n    isOpen: boolean\r\n    navElements: Array<NavElementType>\r\n    toggleOpenNavList: (is: boolean) => void\r\n}\r\n\r\nexport const Navigation: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    // Вытаскиваем свойства из пропса\r\n    const { isOpen, toggleOpenNavList, navElements } = props\r\n\r\n    // переменные для классов\r\n    const listClass = [s.navigation__list]\r\n    const listButtonClass = [s.navigation__btn]\r\n    const listElementClass = [s['navigation__list-element']]\r\n\r\n    // Выводим список элементов\r\n    const elements = useMemo(() => navElements.map(item => {\r\n\r\n        const onClickHandler = () => {\r\n            toggleOpenNavList(false)\r\n        }\r\n\r\n        return (\r\n            <li\r\n                key={v4()}\r\n            >\r\n                <NavLink\r\n                    className={listElementClass.join(' ')}\r\n                    to={item.link}\r\n                    activeClassName={s['navigation__list-element-active']}\r\n                    onClick={onClickHandler}\r\n                >\r\n                    {item.title.toLocaleUpperCase()}\r\n                </NavLink>\r\n            </li>\r\n        )\r\n    }), [listElementClass, navElements, toggleOpenNavList])\r\n\r\n    // Функции и колбэки\r\n    const onClickDownArrowHandler = useCallback(() => {\r\n        toggleOpenNavList(!isOpen)\r\n    }, [isOpen, toggleOpenNavList])\r\n\r\n    // Какие-то условные действия с классами\r\n    // listClass\r\n    if (isOpen) listClass.push(s['navigation__list-active'])\r\n    if (isOpen) listButtonClass.push(s['navigation__btn-active'])\r\n\r\n    return (\r\n        <nav className={s.navigation}>\r\n            <span\r\n                className={listButtonClass.join(' ')}\r\n            >\r\n                <DownArrowSVG\r\n                    onClick={onClickDownArrowHandler}\r\n                    classNameForArrow={isOpen ? s.color : ''}\r\n                    colorBody={'transparent'}\r\n                />\r\n            </span>\r\n            {\r\n                <ul className={listClass.join(' ')}>\r\n                    {\r\n                        elements\r\n                    }\r\n                </ul>\r\n            }\r\n        </nav>\r\n    )\r\n})","import { AppStateType } from '../store'\r\n\r\nexport const getNavigationIsOpenSelect = (state: AppStateType) => state.navigationReducer.isOpenNav\r\nexport const getNavigationNavElementsSelect = (state: AppStateType) => state.navigationReducer.navElements","import { PATH } from \"../../Route\"\r\nimport { InferActionsTypes } from \"../store\"\r\n\r\nexport type NavElementType = {\r\n    title: string\r\n    link: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    isOpenNav: boolean\r\n    navElements: Array<NavElementType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isOpenNav: false,\r\n    // Не забыть изменить переменную в _variable.scss ($countNavigationElement)\r\n    navElements: [\r\n        { title: 'Home', link: PATH.home },\r\n        { title: 'About', link: PATH.about },\r\n        { title: 'Portfolio', link: PATH.portfolio },\r\n        { title: 'Contact', link: PATH.contact },\r\n    ]\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsNavigationReducer>\r\n\r\n\r\nexport const navigationReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'NAVIGATION/TOGGLE-OPEN-NAV-LIST': {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsNavigationReducer = {\r\n    toggleOpenNavListAC: (is: boolean) => ({ type: 'NAVIGATION/TOGGLE-OPEN-NAV-LIST', payload: { isOpenNav: is } } as const)\r\n}","import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigation } from './Navigation'\r\nimport { getNavigationIsOpenSelect, getNavigationNavElementsSelect } from '../../redux/selectors/navigation-selector'\r\nimport { actionsNavigationReducer } from '../../redux/reducers/navigation-reducer'\r\n\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport const ContainerNavigation: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isOpen = useSelector(getNavigationIsOpenSelect)\r\n    const navElements = useSelector(getNavigationNavElementsSelect)\r\n\r\n    const toggleOpenNavList = useCallback((is: boolean) => dispatch(actionsNavigationReducer.toggleOpenNavListAC(is)), [dispatch])\r\n\r\n\r\n    return (\r\n        <Navigation\r\n            isOpen={isOpen}\r\n            navElements={navElements}\r\n            toggleOpenNavList={toggleOpenNavList}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport s from './Subtitle.module.scss'\r\n\r\ntype PropsType = {\r\n    subtitle: string\r\n}\r\n\r\nexport const Subtitle: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { subtitle } = props\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <span className={s.title__line}></span>\r\n            <span className={s.title__text}>\r\n                {subtitle}\r\n            </span>\r\n            <span className={s.title__line}></span>\r\n        </div>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport s from './Title.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n}\r\n\r\nexport const Title: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { title } = props\r\n\r\n    const renderFirstWord = useMemo(() => title.split(' ').slice(0, 1) + \" \", [title])\r\n    const renderSecondWord = useMemo(() => title.split(' ').slice(1), [title])\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <span className={s.title__first}>\r\n                {renderFirstWord}\r\n            </span>\r\n            <span className={s.title__second}>\r\n                {renderSecondWord}\r\n            </span>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport { Subtitle } from '../Subtitle/Subtitle'\r\nimport { Title } from '../Title/Title'\r\nimport s from './TitleHeader.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    subtitle: string\r\n}\r\n\r\nexport const TitleHeader: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { title, subtitle } = props\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <Title title={title} />\r\n            <Subtitle subtitle={subtitle} />\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Element.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    value: string\r\n    isLink?: boolean\r\n    link?: string\r\n}\r\n\r\n\r\nexport const Element: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { title, value, isLink, link } = props\r\n\r\n    return (\r\n        <li className={s.element}>\r\n            {title}\r\n            {\r\n                isLink ? <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a> : <span>{value}</span>\r\n            }\r\n        </li>\r\n    )\r\n})\r\n","import React, { useMemo } from 'react'\r\nimport s from './About.module.scss'\r\nimport { TitleHeader } from '../../TitleHeader/TitleHeader'\r\nimport myPhoto from '../../../assets/images/photos/photoForAvatar.webp'\r\nimport { InfoDataType, ListSkillsDataType } from '../../../redux/reducers/about-reducer'\r\nimport { Element } from '../../Element/Element'\r\n\r\ntype PropsType = {\r\n    infoDates: Array<InfoDataType>\r\n    listSkillsDates: Array<ListSkillsDataType>\r\n}\r\n\r\nexport const About: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { infoDates, listSkillsDates } = props\r\n\r\n    const renderInfoDates = useMemo(() => infoDates.map(i => {\r\n        return <Element key={i.id} value={i.value} title={i.key} />\r\n    }), [infoDates])\r\n\r\n    const renderListSkillsDates = useMemo(() => listSkillsDates.map(i => {\r\n        return (\r\n            <li\r\n                key={i.id}\r\n                className={s[`about__skills-contents-element`]}\r\n                style={{ backgroundColor: i.backgroundColor }}\r\n            >\r\n                {`${i.title}`}\r\n            </li>\r\n        )\r\n    }), [listSkillsDates])\r\n\r\n    return (\r\n        <div className={s.about}>\r\n            <div className={s.about__wrap}>\r\n                <TitleHeader title={'About Me'} subtitle={'Today you make the code, tomorrow the code makes your money'} />\r\n                <div className={s['about__info-wrap']}>\r\n                    <div className={s['about__info-photo']}>\r\n                        <img src={myPhoto} alt=\"\" />\r\n                    </div>\r\n                    <div className={s['about__info-data']}>\r\n                        <ul className={s['about__info-data-list']}>\r\n                            {\r\n                                renderInfoDates\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className={s.about__line}></div>\r\n                {/* <div className={s['about__description-wrap']}>\r\n                    <div className={s['about__description-experience']}>\r\n                        <div className={s['about__description-title']}>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s['about__description-education']}>\r\n                        <div className={s['about__description-title']}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className={s.about__skills}>\r\n                    <div className={s['about__skills-title']}>\r\n                        Skills\r\n                    </div>\r\n                    <div className={s['about__skills-contents']}>\r\n                        <ul className={s['about__skills-contents-list']}>\r\n                            {\r\n                                renderListSkillsDates\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n})","import { AppStateType } from '../store'\r\n\r\n\r\nexport const getAboutInfoDatesSelector = (state: AppStateType) => state.aboutReducer.infoDates\r\nexport const getListSkillsDatesSelector = (state: AppStateType) => state.aboutReducer.listSkillsDates\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { InfoDataType, ListSkillsDataType } from '../../../redux/reducers/about-reducer'\r\nimport { AppStateType } from '../../../redux/store'\r\nimport { About } from './About'\r\nimport { getAboutInfoDatesSelector, getListSkillsDatesSelector } from '../../../redux/selectors/about-selector'\r\n\r\ntype MapStateType = {\r\n    infoDates: Array<InfoDataType>\r\n    listSkillsDates: Array<ListSkillsDataType>\r\n}\r\ntype MapDispatchType = {}\r\ntype OwnerType = {}\r\n\r\ntype PropsType = MapStateType & MapDispatchType & OwnerType\r\n\r\nconst ContainerAbout: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { infoDates, listSkillsDates } = props\r\n\r\n    return <About\r\n        infoDates={infoDates}\r\n        listSkillsDates={listSkillsDates}\r\n    />\r\n})\r\n\r\nconst mapState = (state: AppStateType): MapStateType => ({\r\n    infoDates: getAboutInfoDatesSelector(state),\r\n    listSkillsDates: getListSkillsDatesSelector(state)\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateType, MapDispatchType, OwnerType, AppStateType>(mapState, {\r\n        //dispatch\r\n    })\r\n)(ContainerAbout)","import { FormikConfig, useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport React, { ChangeEvent, FocusEvent, UIEvent } from 'react'\r\nimport s from './ContactFeedbackForm.module.scss'\r\n\r\nexport type ContactFeedbackFormInitialValuesType = {\r\n    name: string\r\n    email: string\r\n    description: string\r\n}\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: ContactFeedbackFormInitialValuesType) => void\r\n}\r\n\r\nexport const ContactFeedbackForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { onSubmit } = props\r\n\r\n    const maxLinkLength = 50\r\n    const maxNameLength = 24\r\n    const maxDescriptionLength = 300\r\n\r\n    const validationSchemaYup = Yup.object({\r\n        name: Yup\r\n            .string()\r\n            .required()\r\n            .max(maxNameLength, `Max count symbols ${maxNameLength}`),\r\n        email: Yup\r\n            .string()\r\n            .email()\r\n            .max(maxLinkLength, `Max count symbols ${maxLinkLength}`),\r\n        description: Yup\r\n            .string()\r\n            .required()\r\n            .max(maxDescriptionLength, `Max count symbols ${maxDescriptionLength}`)\r\n    })\r\n\r\n    const formikConfig: FormikConfig<ContactFeedbackFormInitialValuesType> = {\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            description: \"\"\r\n        },\r\n        onSubmit: (values, { resetForm }) => {\r\n            onSubmit(values)\r\n            resetForm()\r\n        },\r\n        validationSchema: validationSchemaYup,\r\n    }\r\n    const formik = useFormik(formikConfig)\r\n\r\n    const onChangeHandlerTextarea = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        formik.handleChange(e)\r\n    }\r\n\r\n    //Ничего умнее не придумал()\r\n    const onScrollHandler = (e: UIEvent<HTMLTextAreaElement>) => {\r\n\r\n        const scrollHeight = e.currentTarget.scrollHeight\r\n        let height = +e.currentTarget.style.height\r\n\r\n        if (scrollHeight > height) {\r\n            height += (scrollHeight - height)\r\n            e.currentTarget.style.minHeight = `${height}px`\r\n        }\r\n    }\r\n    const onBluerHandler = (e: FocusEvent<HTMLTextAreaElement>) => {\r\n        const value = e.currentTarget.value\r\n\r\n        if (value.trim() === \"\") {\r\n            e.currentTarget.style.minHeight = `50px`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={formik.handleSubmit}>\r\n            <label className={s.form__row}>\r\n                <span className={s.form__title + ` ${formik.errors.name ? s['form__title-error'] : ''}`}>Your name</span>\r\n                <input\r\n                    className={s.form__name + ` ${formik.errors.name ? s['form__name-error'] : ''}`}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.name}\r\n                />\r\n                {\r\n                    formik.errors.name &&\r\n                    <span className={s['form__row-error']}>*{formik.errors.name}</span>\r\n                }\r\n            </label>\r\n            <label className={s.form__row}>\r\n                <span className={s.form__title}>Your email</span>\r\n                <input\r\n                    className={s.form__email}\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {\r\n                    formik.errors.email &&\r\n                    <span className={s['form__row-error']}>*{formik.errors.email}</span>\r\n                }\r\n            </label>\r\n            <label className={s.form__row}>\r\n                <span className={s.form__title + ` ${formik.errors.description ? s['form__title-error'] : ''}`}>Your Comment</span>\r\n                <textarea\r\n                    className={s.form__description + ` ${formik.errors.name ? s['form__description-error'] : ''}`}\r\n                    name=\"description\"\r\n                    onBlur={(e) => onBluerHandler(e)}\r\n                    onScroll={(e) => onScrollHandler(e)}\r\n                    onChange={(e) => onChangeHandlerTextarea(e)}\r\n                    value={formik.values.description}\r\n                />\r\n                {\r\n                    formik.errors.description &&\r\n                    <span className={s['form__row-error']}>*{formik.errors.description}</span>\r\n                }\r\n            </label>\r\n\r\n            <button className={s.form__button} type=\"submit\">Send</button>\r\n        </form>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport { TitleHeader } from '../../TitleHeader/TitleHeader'\r\nimport { ContactFeedbackForm, ContactFeedbackFormInitialValuesType } from '../../../forms/ContactFeedbackForm/ContactFeedbackForm'\r\nimport s from './Contact.module.scss'\r\nimport { ContantElementType } from '../../../redux/reducers/contact-reducer'\r\n\r\n\r\ntype PropsType = {\r\n    onSubmitContactFeedbackForm: (values: ContactFeedbackFormInitialValuesType) => void\r\n    contactElements: Array<ContantElementType>\r\n}\r\n\r\nexport const Contact: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { onSubmitContactFeedbackForm, contactElements } = props\r\n\r\n    const renderContactElements = useMemo(() => contactElements.map((element) => {\r\n        return (\r\n            <li key={element.id} className={s.contact__link}>\r\n                <span className={s['contact__link-span']}>{element.title}</span>\r\n                <a href={element.link} className={s['contact__link-a']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {element.linkTitle}\r\n                </a>\r\n            </li>\r\n        )\r\n    }), [contactElements])\r\n\r\n    return (\r\n        <div className={s.contact}>\r\n            <div className={s.contact__wrap}>\r\n                <TitleHeader\r\n                    title={'My сontact'}\r\n                    subtitle={'Magic ceases to exist after you understand how it works.'}\r\n                />\r\n                <div className={s.contact__content}>\r\n                    <ul className={s.contact__mainlinks}>\r\n                        {\r\n                            renderContactElements\r\n                        }\r\n                    </ul>\r\n                    <div className={s.contact__form}>\r\n                        <div className={s['contact__form-title']}>\r\n                            If you have any suggestion, project or even you want to say Hello.. please fill out the form below and I will reply you shortly.\r\n                        </div>\r\n                        <ContactFeedbackForm onSubmit={onSubmitContactFeedbackForm} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import Axios from \"axios\";\r\n\r\n\r\n//Не крадите его пожалуйста, буду сильно расстроен.\r\nconst getToken = () => {\r\n    const _token = '951359730:AAGrNQVOTlr5qKWhyk_fKySVyxEJQ1PB7Wo'\r\n    return _token\r\n}\r\n\r\n// Это тоже не воруйте. Лучше ничего тут не воруйте, волшебное слово - пожалуйста.\r\nexport const getIdChat = () => {\r\n    const _chatId = '400864056'\r\n    return _chatId\r\n}\r\n\r\n\r\nexport const instance = Axios.create({\r\n    baseURL: `https://api.telegram.org/bot${getToken()}/`\r\n})","import { getIdChat, instance } from './api-settings';\r\n\r\n\r\n\r\nexport const sendMessagesApi = {\r\n    sendMessage: (message: string) => {\r\n        return instance.post(`sendMessage?chat_id=${getIdChat()}&text=${message}`)\r\n            .then(data => {\r\n                if (data.status > 400) {\r\n                    throw Error('Что-то пошло не так, статус ошибки больше 400')\r\n                } else if (data.statusText !== 'OK') {\r\n                    throw Error('data.statusText !== `OK`')\r\n                }\r\n                return data.data\r\n            })\r\n            .catch(e => {\r\n                console.log('Ошибка в POST запросе, в sendMessagesApi метода sendMessage')\r\n                console.log(\"Ошибка/Error: \" + e)\r\n            })\r\n    },\r\n}","import { AppStateType } from './../store';\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { sendMessagesApi } from \"../../api/send-messages-api\"\r\nimport { InferActionsTypes } from \"../store\"\r\nimport { v4 } from 'uuid';\r\n\r\nexport type ContantElementType = {\r\n    id: string\r\n    title: string\r\n    link: string\r\n    linkTitle: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLoading: boolean\r\n    contactElements: Array<ContantElementType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoading: false,\r\n    contactElements: [\r\n        {\r\n            id: v4(),\r\n            title: \"Telegram\",\r\n            linkTitle: \"t.me/mirudistok\",\r\n            link: \"https://t.me/mirudistok\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Vk\",\r\n            linkTitle: \"vk.com/mirudistok\",\r\n            link: \"https://vk.com/mirudistok\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Instagram\",\r\n            linkTitle: \"instagram.com/postnikov_st\",\r\n            link: \"https://www.instagram.com/postnikov_st/\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Linkedin\",\r\n            linkTitle: \"linkedin.com/in/stanislav-postnikov-6220331b7/\",\r\n            link: \"https://www.linkedin.com/in/stanislav-postnikov-6220331b7/\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Twitter\",\r\n            linkTitle: \"https://twitter.com/postnikov_st\",\r\n            link: \"https://twitter.com/postnikov_st\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"GitHub\",\r\n            linkTitle: \"github.com/mirudistok32\",\r\n            link: \"https://github.com/mirudistok32\",\r\n        },\r\n    ],\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsContactReducer>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const contactReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'MIR/CONTACT/IS_LOADING': {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsContactReducer = {\r\n    setIsLoadingAC: (is: boolean) => {\r\n        return {\r\n            type: 'MIR/CONTACT/IS_LOADING',\r\n            payload: {\r\n                isLoading: is\r\n            }\r\n        } as const\r\n    }\r\n}\r\n\r\nexport const sendMessagesInTelegramChatThunk = (message: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actionsContactReducer.setIsLoadingAC(true))\r\n        await sendMessagesApi.sendMessage(message)\r\n        // console.log(statusData.data)\r\n        dispatch(actionsContactReducer.setIsLoadingAC(true))\r\n    }\r\n}\r\n","import { AppStateType } from '../store'\r\n\r\nexport const getContactArrayElements = (state: AppStateType) => state.contactReducer.contactElements\r\n\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Contact } from './Contact'\r\nimport { sendMessagesInTelegramChatThunk } from '../../../redux/reducers/contact-reducer'\r\nimport { ContactFeedbackFormInitialValuesType } from '../../../forms/ContactFeedbackForm/ContactFeedbackForm'\r\nimport { getContactArrayElements } from '../../../redux/selectors/contact-selector'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst ContainerContact: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const contactElements = useSelector(getContactArrayElements)\r\n    const sendMessage = useCallback((message: string) => {\r\n        dispatch(sendMessagesInTelegramChatThunk(message))\r\n    }, [dispatch])\r\n\r\n    const getDataFromForm = useCallback((values: ContactFeedbackFormInitialValuesType) => {\r\n        const { name, description, email } = values\r\n\r\n        const message = `Привет! Это фитбек из портфолио! { Кто написал: ${name} }\r\n        { Её/Его email: ${email} } { Комментарий: ${description} }\r\n        `\r\n        sendMessage(message)\r\n\r\n    }, [sendMessage])\r\n\r\n    return <Contact\r\n        onSubmitContactFeedbackForm={getDataFromForm}\r\n        contactElements={contactElements}\r\n    />\r\n})\r\n\r\n\r\nexport default ContainerContact;","import React, { useMemo } from 'react'\r\nimport { Element } from '../../Element/Element'\r\nimport s from './PortfolioElement.module.scss'\r\nimport { PortfolioInfoListDataType } from '../../../redux/reducers/portfolio-reducer'\r\n\r\ntype PropsType = {\r\n    mainTitle: string\r\n    id?: string\r\n    listsInfo: Array<PortfolioInfoListDataType>\r\n    urlImages: string\r\n    linkImage: string\r\n}\r\n\r\nexport const PortfolioElement: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const {\r\n        mainTitle,\r\n        listsInfo,\r\n        urlImages,\r\n        linkImage } = props\r\n\r\n    const renderElement = useMemo(() => listsInfo.map(l => {\r\n        return <Element\r\n            key={l.id}\r\n            title={l.keyTitle}\r\n            value={l.valueTitle}\r\n            isLink={l.isLink}\r\n            link={l.link}\r\n        />\r\n    }), [listsInfo])\r\n\r\n\r\n    return (\r\n        <div className={s['portfolio__element']}>\r\n            <div className={s['portfolio__element-title']}>{mainTitle}</div>\r\n            <div className={s['portfolio__element-wrap']}>\r\n                <div className={s['portfolio__element-info']}>\r\n                    {\r\n                        renderElement\r\n                    }\r\n                </div>\r\n                <div className={s['portfolio__element-canvas']}>\r\n                    <a href={linkImage} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={urlImages} alt=\"avatar\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport { PortfolioInfoProjectDataType } from '../../../redux/reducers/portfolio-reducer'\r\nimport { TitleHeader } from '../../TitleHeader/TitleHeader'\r\nimport { PortfolioElement } from '../PortfolioElement/PortfolioElement'\r\nimport s from './Portfolio.module.scss'\r\n\r\n\r\ntype PropsType = {\r\n    portfolioInfoProjectDatas: Array<PortfolioInfoProjectDataType>\r\n}\r\n\r\nexport const Portfolio: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { portfolioInfoProjectDatas } = props\r\n\r\n    const renderElements = useMemo(() => portfolioInfoProjectDatas.map(elem => {\r\n\r\n        const { id, listsInfo, mainTitle, urlImages, linkImages } = elem\r\n\r\n        return <PortfolioElement\r\n            key={id}\r\n            urlImages={urlImages}\r\n            listsInfo={listsInfo}\r\n            mainTitle={mainTitle}\r\n            linkImage={linkImages}\r\n        />\r\n    }), [portfolioInfoProjectDatas])\r\n\r\n    return (\r\n        <div className={s.portfolio}>\r\n            <div className={s.portfolio__wrap}>\r\n                <TitleHeader\r\n                    title={'My portfolio'}\r\n                    subtitle={'In theory, theory and practice are inseparable. In practice, this is not the case.'}\r\n                />\r\n                <div className={s.portfolio__content}>\r\n                    {\r\n                        renderElements\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import { AppStateType } from '../store'\r\n\r\n\r\nexport const getPortfolioInfoProjectDatasSelector = (state: AppStateType) => state.portfolioReducer.portfolioInfoProjectDatas\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Portfolio } from './Portfolio'\r\nimport { getPortfolioInfoProjectDatasSelector } from '../../../redux/selectors/portfolio-selector'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst ContainerPortfolio: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const portfolioInfoProjectDatas = useSelector(getPortfolioInfoProjectDatasSelector)\r\n\r\n    return <Portfolio portfolioInfoProjectDatas={portfolioInfoProjectDatas} />\r\n})\r\n\r\nexport default ContainerPortfolio","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { PATH } from './Route'\r\nimport './App.scss';\r\nimport { Home } from './components//pages/Home/Home';\r\nimport { ErrorPath } from './components/utils/ErrorPath/ErrorPath'\r\nimport { ContainerNavigation } from './components/Navigation/ContainerNavigation';\r\nimport ContainerAbout from './components/pages/About/ContainerAbout';\r\nimport ContainerContact from './components/pages/Contact/ContainerContact';\r\nimport ContainerPortfolio from './components/pages/Portfolio/ContainerPortfolio';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <ContainerNavigation />\r\n      <div className=\"app__wrap\">\r\n        <div className=\"app__content\">\r\n          <Switch>\r\n            <Route exact path={'/'} render={() => <Redirect to={PATH.home} />} />\r\n            <Route exact path={PATH.home} render={() => <Home />} />\r\n            <Route exact path={PATH.about} render={() => <ContainerAbout />} />\r\n            <Route exact path={PATH.portfolio} render={() => <ContainerPortfolio />} />\r\n            <Route exact path={PATH.contact} render={() => <ContainerContact />} />\r\n            <Route render={() => <ErrorPath children={'Error path!'} />} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { v4 } from \"uuid\"\r\nimport { InferActionsTypes } from \"../store\"\r\nimport clickMeGame from '../../assets/images/projects/click-me-game.webp'\r\nimport incrementWay from '../../assets/images/projects/increment-way.webp'\r\nimport generatorPassword from '../../assets/images/projects/generator-password.webp'\r\n\r\nexport type PortfolioInfoListDataType = {\r\n    keyTitle: string\r\n    valueTitle: string\r\n    isLink?: boolean\r\n    link?: string\r\n    id: string\r\n}\r\n\r\nexport type PortfolioInfoProjectDataType = {\r\n    mainTitle: string\r\n    id: string\r\n    listsInfo: Array<PortfolioInfoListDataType>\r\n    urlImages: string\r\n    linkImages: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    portfolioInfoProjectDatas: Array<PortfolioInfoProjectDataType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    portfolioInfoProjectDatas: [\r\n        {\r\n            mainTitle: \"Generator Password\",\r\n            id: v4(),\r\n            listsInfo: [\r\n                {\r\n                    keyTitle: \"Link\",\r\n                    valueTitle: \"https://mirudistok32.github.io/generator-password/\",\r\n                    isLink: true,\r\n                    link: \"https://mirudistok32.github.io/generator-password/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"GitHub\",\r\n                    valueTitle: \"https://github.com/Mirudistok32/generator-password\",\r\n                    isLink: true,\r\n                    link: \"https://github.com/Mirudistok32/generator-password\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Description\",\r\n                    valueTitle: \"Generator Password - быстрый способ создать хороший пароль.\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Technologies\",\r\n                    valueTitle: \"#reduxToolkit, #immer, #react, #javascript, #typescript #html, #css, #hooks, #scss, #memo\",\r\n                    id: v4(),\r\n                },\r\n            ],\r\n            urlImages: generatorPassword,\r\n            linkImages: \"https://mirudistok32.github.io/generator-password/\"\r\n        },\r\n        {\r\n            mainTitle: \"ClickMeGame\",\r\n            id: v4(),\r\n            listsInfo: [\r\n                {\r\n                    keyTitle: \"Link\",\r\n                    valueTitle: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n                    isLink: true,\r\n                    link: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"GitHub\",\r\n                    valueTitle: \"https://github.com/Mirudistok32/ClickMeGame/\",\r\n                    isLink: true,\r\n                    link: \"https://github.com/Mirudistok32/ClickMeGame/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Description\",\r\n                    valueTitle: \"ClickMeGame - это мини-игра, цель которой узнать, сколько вы успеете кликнуть по кнопке 'Click' за 10 секунд\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Technologies\",\r\n                    valueTitle: \"#react, #javascript, #typescript #html, #css, #hooks, #sass\",\r\n                    id: v4(),\r\n                },\r\n            ],\r\n            urlImages: clickMeGame,\r\n            linkImages: \"https://mirudistok32.github.io/ClickMeGame/\"\r\n        },\r\n        {\r\n            mainTitle: \"Increment Way\",\r\n            id: v4(),\r\n            listsInfo: [\r\n                {\r\n                    keyTitle: \"Link\",\r\n                    valueTitle: \"https://mirudistok32.github.io/SamuraiWayIncrement/\",\r\n                    isLink: true,\r\n                    link: \"https://mirudistok32.github.io/SamuraiWayIncrement/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"GitHub\",\r\n                    valueTitle: \"https://github.com/Mirudistok32/SamuraiWayIncrement\",\r\n                    isLink: true,\r\n                    link: \"https://github.com/Mirudistok32/SamuraiWayIncrement\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Description\",\r\n                    valueTitle: \"Increment Way - это простой счетчик, в котором можно увеличивать число на дисплеи в большую строну. Так же есть возможность задать свой интервал значений.\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Technologies\",\r\n                    valueTitle: \"#react, #javascript, #html, #css, #hooks, #typescript, #sass, #react-router-dom\",\r\n                    id: v4(),\r\n                },\r\n            ],\r\n            urlImages: incrementWay,\r\n            linkImages: \"https://mirudistok32.github.io/SamuraiWayIncrement/\"\r\n        },\r\n    ],\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsPortfolioReducer>\r\n\r\n\r\nexport const portfolioReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsPortfolioReducer = {\r\n\r\n}","import { v4 } from \"uuid\"\r\nimport { InferActionsTypes } from \"../store\"\r\n\r\nexport type InfoDataType = {\r\n    key: string\r\n    value: string\r\n    id: string\r\n}\r\n\r\nexport type ListSkillsDataType = {\r\n    id: string\r\n    title: string\r\n    backgroundColor: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    infoDates: Array<InfoDataType>\r\n    listSkillsDates: Array<ListSkillsDataType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    infoDates: [\r\n        { key: 'First Name', value: 'Stanislav', id: v4() },\r\n        { key: 'Last Name', value: 'Postnikov', id: v4() },\r\n        { key: 'Birthdate', value: '31 may 1996', id: v4() },\r\n        { key: 'Phone', value: '+7 951 659 01 65', id: v4() },\r\n        { key: 'Nationality', value: 'Russion', id: v4() },\r\n        { key: 'Adress', value: 'Sankt-Petersburg', id: v4() },\r\n        { key: 'Experience', value: '1 year', id: v4() },\r\n        { key: 'Langages', value: 'Russion, English', id: v4() },\r\n        { key: 'Email', value: 'mirudistok32@gmail.com', id: v4() },\r\n        // { key: 'Vk', value: 'https://vk.com/mirudistok', id: v4() },\r\n        // { key: 'Telegram', value: 'https://t.me/mirudistok', id: v4() }\r\n    ],\r\n    listSkillsDates: [\r\n        { title: '<React />', backgroundColor: 'dodgerblue', id: v4() },\r\n        { title: 'createStore(Redux)', backgroundColor: 'mediumslateblue', id: v4() },\r\n        { title: '{ javascript }', backgroundColor: 'gold', id: v4() },\r\n        { title: 'type Typescript', backgroundColor: 'deepskyblue', id: v4() },\r\n        { title: 'css {}', backgroundColor: 'moccasin', id: v4() },\r\n        { title: '<html></html>', backgroundColor: 'chocolate', id: v4() },\r\n        { title: 'Storybook.stories', backgroundColor: 'deeppink', id: v4() },\r\n        { title: \"expect(Jest).toBe('yes')\", backgroundColor: 'coral', id: v4() },\r\n        { title: \".get('https://REST.API')\", backgroundColor: 'lightblue', id: v4() },\r\n        { title: 'GitHub', backgroundColor: 'cornsilk', id: v4() },\r\n    ]\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsNavigationReducer>\r\n\r\n\r\nexport const aboutReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'NAVIGATION/TOGGLE-OPEN-NAV-LIST': {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsNavigationReducer = {\r\n    toggleOpenNavListAC: (is: boolean) => ({ type: 'NAVIGATION/TOGGLE-OPEN-NAV-LIST', payload: { isOpenNav: is } } as const)\r\n}","import { portfolioReducer } from './reducers/portfolio-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { navigationReducer } from './reducers/navigation-reducer'\r\nimport { aboutReducer } from './reducers/about-reducer'\r\nimport { contactReducer } from './reducers/contact-reducer'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducers = combineReducers({\r\n    navigationReducer,\r\n    aboutReducer,\r\n    portfolioReducer,\r\n    contactReducer\r\n})\r\n\r\ntype RootReducersType = typeof rootReducers\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__rpeEz\",\"about__wrap\":\"About_about__wrap__2RIa9\",\"about__info-wrap\":\"About_about__info-wrap__3DTfX\",\"about__info-photo\":\"About_about__info-photo__vepuA\",\"about__info-data\":\"About_about__info-data__3OFUP\",\"about__info-data-list\":\"About_about__info-data-list__j3cDv\",\"about__line\":\"About_about__line__2ABDe\",\"about__skills\":\"About_about__skills__ihvjN\",\"about__skills-title\":\"About_about__skills-title__1ibAZ\",\"about__skills-contents-list\":\"About_about__skills-contents-list__3vNn4\",\"about__skills-contents-element\":\"About_about__skills-contents-element__XzCF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__39iwm\",\"contact__wrap\":\"Contact_contact__wrap__37n7a\",\"contact__content\":\"Contact_contact__content__2dMHm\",\"contact__mainlinks\":\"Contact_contact__mainlinks__1Z1RT\",\"contact__link\":\"Contact_contact__link__3t8X8\",\"contact__link-span\":\"Contact_contact__link-span__1U_D0\",\"contact__link-a\":\"Contact_contact__link-a__2tpm6\",\"contact__form\":\"Contact_contact__form__1coNW\",\"contact__form-title\":\"Contact_contact__form-title__3Tpfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__FdEed\",\"navigation__btn\":\"Navigation_navigation__btn__B67a9\",\"navigation__btn-active\":\"Navigation_navigation__btn-active__28gtE\",\"navigation__list\":\"Navigation_navigation__list__fp9RH\",\"navigation__list-active\":\"Navigation_navigation__list-active__3yMSZ\",\"navigation__list-element\":\"Navigation_navigation__list-element__18z6M\",\"navigation__list-element-active\":\"Navigation_navigation__list-element-active__Iqicj\",\"color\":\"Navigation_color__3sCkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__IyEKT\",\"home__wrap\":\"Home_home__wrap__sfOuj\",\"home__photo\":\"Home_home__photo__2A9Rh\",\"home__content\":\"Home_home__content__3YQek\",\"home__content-hi\":\"Home_home__content-hi__VcoxG\",\"home__content-name\":\"Home_home__content-name__3J_4N\",\"home__content-about\":\"Home_home__content-about__3BDme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio__element\":\"PortfolioElement_portfolio__element__2LWwO\",\"portfolio__element-title\":\"PortfolioElement_portfolio__element-title__3yY14\",\"portfolio__element-wrap\":\"PortfolioElement_portfolio__element-wrap__3fHgD\",\"portfolio__element-info\":\"PortfolioElement_portfolio__element-info__1q0Ie\",\"portfolio__element-canvas\":\"PortfolioElement_portfolio__element-canvas__3qoc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-path\":\"ErrorPath_error-path__yVmX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Subtitle_title__31ojp\",\"title__line\":\"Subtitle_title__line__2-CaY\",\"title__text\":\"Subtitle_title__text___Zg5y\"};","module.exports = __webpack_public_path__ + \"static/media/photoForAvatar.1aa6bd36.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFeedbackForm_form__1LYrf\",\"form__row\":\"ContactFeedbackForm_form__row__bplf7\",\"form__row-error\":\"ContactFeedbackForm_form__row-error__2k1ao\",\"form__email\":\"ContactFeedbackForm_form__email__QNoq4\",\"form__name\":\"ContactFeedbackForm_form__name___htJL\",\"form__description\":\"ContactFeedbackForm_form__description__1pgS3\",\"form__title\":\"ContactFeedbackForm_form__title__Qb3zx\",\"form__title-error\":\"ContactFeedbackForm_form__title-error__1X6Yz\",\"form__description-error\":\"ContactFeedbackForm_form__description-error__10Aew\",\"form__name-error\":\"ContactFeedbackForm_form__name-error__TalfG\",\"form__button\":\"ContactFeedbackForm_form__button__2m_iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Images_image__RkmrE\",\"image__link\":\"Images_image__link__1ySFM\",\"image__photo\":\"Images_image__photo__2kmQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"down-arrow\":\"DownArrowSVG_down-arrow__3MjOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2MsYX\",\"title__second\":\"Title_title__second__33PSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio\":\"Portfolio_portfolio__1m80j\",\"portfolio__wrap\":\"Portfolio_portfolio__wrap__3QxTv\",\"portfolio__content\":\"Portfolio_portfolio__content__2udcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleHeader_title__1D2sg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"Element_element__16iu3\"};"],"sourceRoot":""}