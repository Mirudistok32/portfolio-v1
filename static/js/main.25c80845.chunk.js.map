{"version":3,"sources":["Route.ts","components/Images/Images.tsx","components/pages/Home/Home.tsx","components/utils/ErrorPath/ErrorPath.tsx","components/Navigation/DownArrowSVG/DownArrowSVG.tsx","components/Navigation/Navigation.tsx","redux/selectors/navigation-selector.ts","redux/reducers/navigation-reducer.ts","components/Navigation/ContainerNavigation.tsx","components/Subtitle/Subtitle.tsx","components/Title/Title.tsx","components/TitleHeader/TitleHeader.tsx","components/Element/Element.tsx","components/pages/About/About.tsx","redux/selectors/about-selector.ts","components/pages/About/ContainerAbout.tsx","forms/ContactFeedbackForm/ContactFeedbackForm.tsx","components/pages/Contact/Contact.tsx","api/api-settings.ts","api/send-messages-api.ts","redux/reducers/contact-reducer.ts","redux/selectors/contact-selector.ts","components/pages/Contact/ContainerContact.tsx","components/pages/PortfolioElement/PortfolioElement.tsx","components/pages/Portfolio/Portfolio.tsx","redux/selectors/portfolio-selector.ts","components/pages/Portfolio/ContainerPortfolio.tsx","App.tsx","serviceWorker.ts","redux/reducers/portfolio-reducer.ts","redux/reducers/about-reducer.ts","redux/store.ts","index.tsx","components/pages/About/About.module.scss","components/pages/Contact/Contact.module.scss","components/Navigation/Navigation.module.scss","components/pages/Home/Home.module.scss","components/pages/PortfolioElement/PortfolioElement.module.scss","components/utils/ErrorPath/ErrorPath.module.scss","components/Subtitle/Subtitle.module.scss","assets/images/photos/photoForAvatar.png","forms/ContactFeedbackForm/ContactFeedbackForm.module.scss","components/Images/Images.module.scss","components/Navigation/DownArrowSVG/DownArrowSVG.module.scss","components/Title/Title.module.scss","components/pages/Portfolio/Portfolio.module.scss","components/TitleHeader/TitleHeader.module.scss","components/Element/Element.module.scss"],"names":["PATH","Images","React","memo","props","src","alt","title","link","className","s","image","image__link","to","image__photo","Home","home","home__wrap","home__photo","myPhoto","home__content","ErrorPath","children","darkColor","lightColor","mainClass","push","join","DownArrowSVG","colorArrow","colorBody","onClick","classNameForArrow","classNameForBody","classMain","classArrow","classBody","e","version","xmlns","viewBox","fill","d","Navigation","isOpen","toggleOpenNavList","navElements","listClass","navigation__list","listButtonClass","navigation__btn","listElementClass","elements","useMemo","map","item","key","v4","activeClassName","toLocaleUpperCase","navigation","color","getNavigationIsOpenSelect","state","navigationReducer","isOpenNav","getNavigationNavElementsSelect","initialState","actionsNavigationReducer","is","type","payload","ContainerNavigation","dispatch","useDispatch","useSelector","Subtitle","subtitle","title__line","title__text","Title","renderFirstWord","split","slice","renderSecondWord","title__first","title__second","TitleHeader","Element","value","isLink","element","href","target","rel","About","infoDates","listSkillsDates","renderInfoDates","i","id","renderListSkillsDates","style","backgroundColor","about","about__wrap","about__line","about__skills","getAboutInfoDatesSelector","aboutReducer","getListSkillsDatesSelector","ContainerAbout","compose","connect","ContactFeedbackForm","onSubmit","formikConfig","initialValues","name","email","description","values","resetForm","validationSchema","Yup","required","max","formik","useFormik","form","handleSubmit","form__row","form__title","errors","form__name","onChange","handleChange","form__email","form__description","onBlur","currentTarget","trim","minHeight","onBluerHandler","onScroll","scrollHeight","height","onScrollHandler","onChangeHandlerTextarea","form__button","Contact","onSubmitContactFeedbackForm","contactElements","renderContactElements","contact__link","linkTitle","contact","contact__wrap","contact__content","contact__mainlinks","contact__form","instance","Axios","create","baseURL","sendMessagesApi","message","post","then","data","status","Error","statusText","catch","console","log","isLoading","actionsContactReducer","getContactArrayElements","contactReducer","ContainerContact","sendMessage","useCallback","a","sendMessagesInTelegramChatThunk","getDataFromForm","PortfolioElement","mainTitle","listsInfo","iframeLink","iframeTitle","renderElement","l","keyTitle","valueTitle","allowFullScreen","Portfolio","portfolioInfoProjectDatas","renderElements","elem","portfolio","portfolio__wrap","portfolio__content","getPortfolioInfoProjectDatasSelector","portfolioReducer","ContainerPortfolio","App","exact","path","render","Boolean","window","location","hostname","match","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.25c80845.chunk.js","sourcesContent":["export const PATH = {\r\n    empty: '/',\r\n    home: '/home',\r\n    about: '/about',\r\n    portfolio: '/portfolio',\r\n    contact: '/contact',\r\n    error: '/error'\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Images.module.scss'\r\n\r\ntype PropsType = {\r\n    src: string,\r\n    alt?: string,\r\n    title?: string,\r\n    link: string\r\n}\r\n\r\nexport const Images: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { src, alt, title, link } = props\r\n\r\n    return (\r\n        <div className={s.image}>\r\n            <NavLink className={s.image__link} to={link} title={title}>\r\n                <img className={s.image__photo} src={src} alt={alt} />\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Home.module.scss'\r\nimport myPhoto from '../../../assets/images/photos/photoForAvatar.png'\r\nimport { PATH } from '../../../Route'\r\nimport { Images } from '../../Images/Images'\r\n\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport const Home: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    return (\r\n        <div className={s.home}>\r\n            <div className={s.home__wrap}>\r\n                <div className={s.home__photo}>\r\n                    <Images src={myPhoto} alt={'my photo'} title={'about me'} link={PATH.about} />\r\n                </div>\r\n                <div className={s.home__content}>\r\n                    <div className={s['home__content-hi']}>Hi `<span>everybody</span>`!</div>\r\n                    <div className={s['home__content-name']}>I'm <span>Postnikov Stanislav</span></div>\r\n                    <div className={s['home__content-about']}>\r\n                        I'm Frontend Developer!\r\n                        I live in the Sankt-Petersburg.\r\n                        I like to write code and create understandably web-applications.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './ErrorPath.module.scss'\r\n\r\ntype PropsType = {\r\n    darkColor?: boolean\r\n    lightColor?: boolean\r\n}\r\n\r\nexport const ErrorPath: React.FC<PropsType> = (props) => {\r\n\r\n    const { children, darkColor, lightColor } = props\r\n\r\n    const mainClass = [s['error-path']]\r\n    if (darkColor && !lightColor) mainClass.push(s['dark-color'])\r\n    if (!darkColor && lightColor) mainClass.push(s['light-color'])\r\n    if (darkColor && lightColor) mainClass.push(s['light-color'])\r\n\r\n\r\n    return (\r\n        <div className={mainClass.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React, { MouseEvent } from 'react'\r\nimport s from './DownArrowSVG.module.scss'\r\n\r\ntype PropsType = {\r\n    colorArrow?: string\r\n    colorBody?: string\r\n    height?: number\r\n    weigth?: number\r\n    classNameForBody?: string\r\n    classNameForArrow?: string\r\n    onClick?: (e: MouseEvent<SVGSVGElement>) => void\r\n}\r\n\r\nexport const DownArrowSVG: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const {\r\n        colorArrow = '#FAFAFA',\r\n        colorBody = '#2196F3',\r\n        onClick,\r\n        classNameForArrow,\r\n        classNameForBody\r\n    } = props\r\n\r\n    // const classMain = useMemo(() => { return [s['down-arrow']] }, [])\r\n    // const classArrow = useMemo(() => { return [s['down-arrow__arw']] }, [classNameForArrow])\r\n    // const classBody = useMemo(() => { return [s['down-arrow__body']] }, [classNameForBody])\r\n\r\n    const classMain = [s['down-arrow']]\r\n    const classArrow = [s['down-arrow__arw']]\r\n    const classBody = [s['down-arrow__body']]\r\n\r\n    const onClickHandler = (e: MouseEvent<SVGSVGElement>) => {\r\n        onClick && onClick(e)\r\n    }\r\n\r\n    if (classNameForArrow) classArrow.push(classNameForArrow)\r\n    if (classNameForBody) classArrow.push(classNameForBody)\r\n\r\n    return (\r\n        <svg\r\n            className={classMain.join(' ')}\r\n            onClick={onClickHandler}\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 490.667 490.667\"\r\n        >\r\n            <path\r\n                className={classBody.join('')}\r\n                fill={colorBody}\r\n                d=\"M245.333,0C109.839,0,0,109.839,0,245.333s109.839,245.333,245.333,245.333\r\n\t            s245.333-109.839,245.333-245.333C490.514,109.903,380.764,0.153,245.333,0z\"\r\n            />\r\n            <path\r\n                className={classArrow.join('')}\r\n                fill={colorArrow}\r\n                d=\"M317.867,221.867l-19.2,19.2V117.333c0-29.455-23.878-53.333-53.333-53.333S192,87.878,192,117.333\r\n                v123.584l-19.2-19.2c-19.139-18.289-49.277-18.289-68.416,0c-18.889,18.894-18.889,49.522,0,68.416l118.251,118.251\r\n                c12.496,12.492,32.752,12.492,45.248,0l118.251-118.251c18.889-18.894,18.889-49.522,0-68.416\r\n                C366.975,203.565,336.946,203.631,317.867,221.867z\"\r\n            />\r\n        </svg>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport s from './Navigation.module.scss'\r\nimport { DownArrowSVG } from './DownArrowSVG/DownArrowSVG'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { NavElementType } from '../../redux/reducers/navigation-reducer'\r\nimport { v4 } from 'uuid'\r\n\r\n\r\ntype PropsType = {\r\n    isOpen: boolean\r\n    navElements: Array<NavElementType>\r\n    toggleOpenNavList: (is: boolean) => void\r\n}\r\n\r\nexport const Navigation: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    // Вытаскиваем свойства из пропса\r\n    const { isOpen, toggleOpenNavList, navElements } = props\r\n\r\n    // переменные для классов\r\n    const listClass = [s.navigation__list]\r\n    const listButtonClass = [s.navigation__btn]\r\n    const listElementClass = [s['navigation__list-element']]\r\n\r\n    // Выводим список элементов\r\n    const elements = useMemo(() => navElements.map(item => {\r\n\r\n        const onClickHandler = () => {\r\n            toggleOpenNavList(false)\r\n        }\r\n\r\n        return (\r\n            <li\r\n                key={v4()}\r\n            >\r\n                <NavLink\r\n                    className={listElementClass.join(' ')}\r\n                    to={item.link}\r\n                    activeClassName={s['navigation__list-element-active']}\r\n                    onClick={onClickHandler}\r\n                >\r\n                    {item.title.toLocaleUpperCase()}\r\n                </NavLink>\r\n            </li>\r\n        )\r\n    }), [listElementClass, navElements, toggleOpenNavList, isOpen])\r\n\r\n    // Функции и колбэки\r\n    const onClickDownArrowHandler = () => {\r\n        toggleOpenNavList(!isOpen)\r\n    }\r\n\r\n    // Какие-то условные действия с классами\r\n    // listClass\r\n    if (isOpen) listClass.push(s['navigation__list-active'])\r\n    if (isOpen) listButtonClass.push(s['navigation__btn-active'])\r\n\r\n    return (\r\n        <nav className={s.navigation}>\r\n            <span\r\n                className={listButtonClass.join(' ')}\r\n            >\r\n                <DownArrowSVG\r\n                    onClick={onClickDownArrowHandler}\r\n                    classNameForArrow={isOpen ? s.color : ''}\r\n                    colorBody={'transparent'}\r\n                />\r\n            </span>\r\n            {\r\n                <ul className={listClass.join(' ')}>\r\n                    {\r\n                        elements\r\n                    }\r\n                </ul>\r\n            }\r\n        </nav>\r\n    )\r\n})","import { AppStateType } from '../store'\r\n\r\nexport const getNavigationIsOpenSelect = (state: AppStateType) => state.navigationReducer.isOpenNav\r\nexport const getNavigationNavElementsSelect = (state: AppStateType) => state.navigationReducer.navElements","import { PATH } from \"../../Route\"\r\nimport { InferActionsTypes } from \"../store\"\r\n\r\nexport type NavElementType = {\r\n    title: string\r\n    link: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    isOpenNav: boolean\r\n    navElements: Array<NavElementType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isOpenNav: false,\r\n    // Не забыть изменить переменную в _variable.scss ($countNavigationElement)\r\n    navElements: [\r\n        { title: 'Home', link: PATH.home },\r\n        { title: 'About', link: PATH.about },\r\n        { title: 'Portfolio', link: PATH.portfolio },\r\n        { title: 'Contact', link: PATH.contact },\r\n    ]\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsNavigationReducer>\r\n\r\n\r\nexport const navigationReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'NAVIGATION/TOGGLE-OPEN-NAV-LIST': {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsNavigationReducer = {\r\n    toggleOpenNavListAC: (is: boolean) => ({ type: 'NAVIGATION/TOGGLE-OPEN-NAV-LIST', payload: { isOpenNav: is } } as const)\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigation } from './Navigation'\r\nimport { getNavigationIsOpenSelect, getNavigationNavElementsSelect } from '../../redux/selectors/navigation-selector'\r\nimport { actionsNavigationReducer } from '../../redux/reducers/navigation-reducer'\r\n\r\ntype OwnerProps = {\r\n\r\n}\r\n\r\ntype PropsType = OwnerProps\r\n\r\nexport const ContainerNavigation: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isOpen = useSelector(getNavigationIsOpenSelect)\r\n    const navElements = useSelector(getNavigationNavElementsSelect)\r\n\r\n    const toggleOpenNavList = (is: boolean) => dispatch(actionsNavigationReducer.toggleOpenNavListAC(is))\r\n\r\n\r\n    return (\r\n        <Navigation\r\n            isOpen={isOpen}\r\n            navElements={navElements}\r\n            toggleOpenNavList={toggleOpenNavList}\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport s from './Subtitle.module.scss'\r\n\r\ntype PropsType = {\r\n    subtitle: string\r\n}\r\n\r\nexport const Subtitle: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { subtitle } = props\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <span className={s.title__line}></span>\r\n            <span className={s.title__text}>\r\n                {subtitle}\r\n            </span>\r\n            <span className={s.title__line}></span>\r\n        </div>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport s from './Title.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n}\r\n\r\nexport const Title: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { title } = props\r\n\r\n    const renderFirstWord = useMemo(() => title.split(' ').slice(0, 1) + \" \", [title])\r\n    const renderSecondWord = useMemo(() => title.split(' ').slice(1), [title])\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <span className={s.title__first}>\r\n                {renderFirstWord}\r\n            </span>\r\n            <span className={s.title__second}>\r\n                {renderSecondWord}\r\n            </span>\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport { Subtitle } from '../Subtitle/Subtitle'\r\nimport { Title } from '../Title/Title'\r\nimport s from './TitleHeader.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    subtitle: string\r\n}\r\n\r\nexport const TitleHeader: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { title, subtitle } = props\r\n\r\n    return (\r\n        <div className={s.title}>\r\n            <Title title={title} />\r\n            <Subtitle subtitle={subtitle} />\r\n        </div>\r\n    )\r\n})","import React from 'react'\r\nimport s from './Element.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    value: string\r\n    isLink?: boolean\r\n    link?: string\r\n}\r\n\r\n\r\nexport const Element: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { title, value, isLink, link } = props\r\n\r\n    return (\r\n        <li className={s.element}>\r\n            {title}\r\n            {\r\n                isLink ? <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a> : <span>{value}</span>\r\n            }\r\n        </li>\r\n    )\r\n})\r\n","import React, { useMemo } from 'react'\r\nimport s from './About.module.scss'\r\nimport { TitleHeader } from '../../TitleHeader/TitleHeader'\r\nimport myPhoto from '../../../assets/images/photos/photoForAvatar.png'\r\nimport { InfoDataType, ListSkillsDataType } from '../../../redux/reducers/about-reducer'\r\nimport { Element } from '../../Element/Element'\r\n\r\ntype PropsType = {\r\n    infoDates: Array<InfoDataType>\r\n    listSkillsDates: Array<ListSkillsDataType>\r\n}\r\n\r\nexport const About: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { infoDates, listSkillsDates } = props\r\n\r\n    const renderInfoDates = useMemo(() => infoDates.map(i => {\r\n        return <Element key={i.id} value={i.value} title={i.key} />\r\n    }), [infoDates])\r\n\r\n    const renderListSkillsDates = useMemo(() => listSkillsDates.map(i => {\r\n        return (\r\n            <li\r\n                key={i.id}\r\n                className={s[`about__skills-contents-element`]}\r\n                style={{ backgroundColor: i.backgroundColor }}\r\n            >\r\n                {`${i.title}`}\r\n            </li>\r\n        )\r\n    }), [listSkillsDates])\r\n\r\n    return (\r\n        <div className={s.about}>\r\n            <div className={s.about__wrap}>\r\n                <TitleHeader title={'About Me'} subtitle={'Today you make the code, tomorrow the code makes you money'} />\r\n                <div className={s['about__info-wrap']}>\r\n                    <div className={s['about__info-photo']}>\r\n                        <img src={myPhoto} alt=\"\" />\r\n                    </div>\r\n                    <div className={s['about__info-data']}>\r\n                        <ul className={s['about__info-data-list']}>\r\n                            {\r\n                                renderInfoDates\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className={s.about__line}></div>\r\n                {/* <div className={s['about__description-wrap']}>\r\n                    <div className={s['about__description-experience']}>\r\n                        <div className={s['about__description-title']}>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s['about__description-education']}>\r\n                        <div className={s['about__description-title']}>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className={s.about__skills}>\r\n                    <div className={s['about__skills-title']}>\r\n                        Skills\r\n                    </div>\r\n                    <div className={s['about__skills-contents']}>\r\n                        <ul className={s['about__skills-contents-list']}>\r\n                            {\r\n                                renderListSkillsDates\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n})","import { AppStateType } from '../store'\r\n\r\n\r\nexport const getAboutInfoDatesSelector = (state: AppStateType) => state.aboutReducer.infoDates\r\nexport const getListSkillsDatesSelector = (state: AppStateType) => state.aboutReducer.listSkillsDates\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { InfoDataType, ListSkillsDataType } from '../../../redux/reducers/about-reducer'\r\nimport { AppStateType } from '../../../redux/store'\r\nimport { About } from './About'\r\nimport { getAboutInfoDatesSelector, getListSkillsDatesSelector } from '../../../redux/selectors/about-selector'\r\n\r\ntype MapStateType = {\r\n    infoDates: Array<InfoDataType>\r\n    listSkillsDates: Array<ListSkillsDataType>\r\n}\r\ntype MapDispatchType = {}\r\ntype OwnerType = {}\r\n\r\ntype PropsType = MapStateType & MapDispatchType & OwnerType\r\n\r\nconst ContainerAbout: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { infoDates, listSkillsDates } = props\r\n\r\n    return <About\r\n        infoDates={infoDates}\r\n        listSkillsDates={listSkillsDates}\r\n    />\r\n})\r\n\r\nconst mapState = (state: AppStateType): MapStateType => ({\r\n    infoDates: getAboutInfoDatesSelector(state),\r\n    listSkillsDates: getListSkillsDatesSelector(state)\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateType, MapDispatchType, OwnerType, AppStateType>(mapState, {\r\n        //dispatch\r\n    })\r\n)(ContainerAbout)","import { FormikConfig, useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport React, { ChangeEvent, FocusEvent, UIEvent } from 'react'\r\nimport s from './ContactFeedbackForm.module.scss'\r\n\r\nexport type ContactFeedbackFormInitialValuesType = {\r\n    name: string\r\n    email: string\r\n    description: string\r\n}\r\n\r\ntype PropsType = {\r\n    onSubmit: (values: ContactFeedbackFormInitialValuesType) => void\r\n}\r\n\r\nexport const ContactFeedbackForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { onSubmit } = props\r\n\r\n    const maxLinkLength = 50\r\n    const maxNameLength = 24\r\n    const maxDescriptionLength = 300\r\n\r\n    const validationSchemaYup = Yup.object({\r\n        name: Yup\r\n            .string()\r\n            .required()\r\n            .max(maxNameLength, `Max count symbols ${maxNameLength}`),\r\n        email: Yup\r\n            .string()\r\n            .email()\r\n            .max(maxLinkLength, `Max count symbols ${maxLinkLength}`),\r\n        description: Yup\r\n            .string()\r\n            .required()\r\n            .max(maxDescriptionLength, `Max count symbols ${maxDescriptionLength}`)\r\n    })\r\n\r\n    const formikConfig: FormikConfig<ContactFeedbackFormInitialValuesType> = {\r\n        initialValues: {\r\n            name: \"\",\r\n            email: \"\",\r\n            description: \"\"\r\n        },\r\n        onSubmit: (values, { resetForm }) => {\r\n            onSubmit(values)\r\n            resetForm()\r\n        },\r\n        validationSchema: validationSchemaYup,\r\n    }\r\n    const formik = useFormik(formikConfig)\r\n\r\n    const onChangeHandlerTextarea = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        formik.handleChange(e)\r\n    }\r\n\r\n    //Ничего умнее не придумал()\r\n    const onScrollHandler = (e: UIEvent<HTMLTextAreaElement>) => {\r\n\r\n        const scrollHeight = e.currentTarget.scrollHeight\r\n        let height = +e.currentTarget.style.height\r\n\r\n        if (scrollHeight > height) {\r\n            height += (scrollHeight - height)\r\n            e.currentTarget.style.minHeight = `${height}px`\r\n        }\r\n    }\r\n    const onBluerHandler = (e: FocusEvent<HTMLTextAreaElement>) => {\r\n        const value = e.currentTarget.value\r\n\r\n        if (value.trim() === \"\") {\r\n            e.currentTarget.style.minHeight = `50px`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={formik.handleSubmit}>\r\n            <label className={s.form__row}>\r\n                <span className={s.form__title + ` ${formik.errors.name ? s['form__title-error'] : ''}`}>Your name</span>\r\n                <input\r\n                    className={s.form__name + ` ${formik.errors.name ? s['form__name-error'] : ''}`}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.name}\r\n                />\r\n                {\r\n                    formik.errors.name &&\r\n                    <span className={s['form__row-error']}>*{formik.errors.name}</span>\r\n                }\r\n            </label>\r\n            <label className={s.form__row}>\r\n                <span className={s.form__title}>Your email</span>\r\n                <input\r\n                    className={s.form__email}\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {\r\n                    formik.errors.email &&\r\n                    <span className={s['form__row-error']}>*{formik.errors.email}</span>\r\n                }\r\n            </label>\r\n            <label className={s.form__row}>\r\n                <span className={s.form__title + ` ${formik.errors.description ? s['form__title-error'] : ''}`}>Your Comment</span>\r\n                <textarea\r\n                    className={s.form__description + ` ${formik.errors.name ? s['form__description-error'] : ''}`}\r\n                    name=\"description\"\r\n                    onBlur={(e) => onBluerHandler(e)}\r\n                    onScroll={(e) => onScrollHandler(e)}\r\n                    onChange={(e) => onChangeHandlerTextarea(e)}\r\n                    value={formik.values.description}\r\n                />\r\n                {\r\n                    formik.errors.description &&\r\n                    <span className={s['form__row-error']}>*{formik.errors.description}</span>\r\n                }\r\n            </label>\r\n\r\n            <button className={s.form__button} type=\"submit\">Send</button>\r\n        </form>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport { TitleHeader } from '../../TitleHeader/TitleHeader'\r\nimport { ContactFeedbackForm, ContactFeedbackFormInitialValuesType } from '../../../forms/ContactFeedbackForm/ContactFeedbackForm'\r\nimport s from './Contact.module.scss'\r\nimport { ContantElementType } from '../../../redux/reducers/contact-reducer'\r\n\r\n\r\ntype PropsType = {\r\n    onSubmitContactFeedbackForm: (values: ContactFeedbackFormInitialValuesType) => void\r\n    contactElements: Array<ContantElementType>\r\n}\r\n\r\nexport const Contact: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { onSubmitContactFeedbackForm, contactElements } = props\r\n\r\n    const renderContactElements = useMemo(() => contactElements.map((element) => {\r\n        return (\r\n            <li key={element.id} className={s.contact__link}>\r\n                <span className={s['contact__link-span']}>{element.title}</span>\r\n                <a href={element.link} className={s['contact__link-a']} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {element.linkTitle}\r\n                </a>\r\n            </li>\r\n        )\r\n    }), [contactElements])\r\n\r\n    return (\r\n        <div className={s.contact}>\r\n            <div className={s.contact__wrap}>\r\n                <TitleHeader\r\n                    title={'My сontact'}\r\n                    subtitle={'Magic ceases to exist after you understand how it works.'}\r\n                />\r\n                <div className={s.contact__content}>\r\n                    <ul className={s.contact__mainlinks}>\r\n                        {\r\n                            renderContactElements\r\n                        }\r\n                    </ul>\r\n                    <div className={s.contact__form}>\r\n                        <div className={s['contact__form-title']}>\r\n                            If you have any suggestion, project or even you want to say Hello.. please fill out the form below and I will reply you shortly.\r\n                        </div>\r\n                        <ContactFeedbackForm onSubmit={onSubmitContactFeedbackForm} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import Axios from \"axios\";\r\n\r\n\r\n//Не крадите его пожалуйста, буду сильно расстроен.\r\nconst getToken = () => {\r\n    const _token = '951359730:AAGrNQVOTlr5qKWhyk_fKySVyxEJQ1PB7Wo'\r\n    return _token\r\n}\r\n\r\n// Это тоже не воруйте. Лучше ничего тут не воруйте, волшебное слово - пожалуйста.\r\nexport const getIdChat = () => {\r\n    const _chatId = '400864056'\r\n    return _chatId\r\n}\r\n\r\n\r\nexport const instance = Axios.create({\r\n    baseURL: `https://api.telegram.org/bot${getToken()}/`\r\n})","import { getIdChat, instance } from './api-settings';\r\n\r\n\r\n\r\nexport const sendMessagesApi = {\r\n    sendMessage: (message: string) => {\r\n        return instance.post(`sendMessage?chat_id=${getIdChat()}&text=${message}`)\r\n            .then(data => {\r\n                if (data.status > 400) {\r\n                    throw Error('Что-то пошло не так, статус ошибки больше 400')\r\n                } else if (data.statusText !== 'OK') {\r\n                    throw Error('data.statusText !== `OK`')\r\n                }\r\n                return data.data\r\n            })\r\n            .catch(e => {\r\n                console.log('Ошибка в POST запросе, в sendMessagesApi метода sendMessage')\r\n                console.log(\"Ошибка/Error: \" + e)\r\n            })\r\n    },\r\n}","import { AppStateType } from './../store';\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { sendMessagesApi } from \"../../api/send-messages-api\"\r\nimport { InferActionsTypes } from \"../store\"\r\nimport { v4 } from 'uuid';\r\n\r\nexport type ContantElementType = {\r\n    id: string\r\n    title: string\r\n    link: string\r\n    linkTitle: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLoading: boolean\r\n    contactElements: Array<ContantElementType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoading: false,\r\n    contactElements: [\r\n        {\r\n            id: v4(),\r\n            title: \"Telegram\",\r\n            linkTitle: \"t.me/mirudistok\",\r\n            link: \"https://t.me/mirudistok\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Vk\",\r\n            linkTitle: \"vk.com/mirudistok\",\r\n            link: \"https://vk.com/mirudistok\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Instagram\",\r\n            linkTitle: \"instagram.com/postnikov_st\",\r\n            link: \"https://www.instagram.com/postnikov_st/\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Linkedin\",\r\n            linkTitle: \"linkedin.com/in/stanislav-postnikov-6220331b7/\",\r\n            link: \"https://www.linkedin.com/in/stanislav-postnikov-6220331b7/\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"Twitter\",\r\n            linkTitle: \"https://twitter.com/postnikov_st\",\r\n            link: \"https://twitter.com/postnikov_st\",\r\n        },\r\n        {\r\n            id: v4(),\r\n            title: \"GitHub\",\r\n            linkTitle: \"github.com/mirudistok32\",\r\n            link: \"https://github.com/mirudistok32\",\r\n        },\r\n    ],\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsContactReducer>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const contactReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'MIR/CONTACT/IS_LOADING': {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsContactReducer = {\r\n    setIsLoadingAC: (is: boolean) => {\r\n        return {\r\n            type: 'MIR/CONTACT/IS_LOADING',\r\n            payload: {\r\n                isLoading: is\r\n            }\r\n        } as const\r\n    }\r\n}\r\n\r\nexport const sendMessagesInTelegramChatThunk = (message: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actionsContactReducer.setIsLoadingAC(true))\r\n        await sendMessagesApi.sendMessage(message)\r\n        // console.log(statusData.data)\r\n        dispatch(actionsContactReducer.setIsLoadingAC(true))\r\n    }\r\n}\r\n","import { AppStateType } from '../store'\r\n\r\nexport const getContactArrayElements = (state: AppStateType) => state.contactReducer.contactElements\r\n\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Contact } from './Contact'\r\nimport { sendMessagesInTelegramChatThunk } from '../../../redux/reducers/contact-reducer'\r\nimport { ContactFeedbackFormInitialValuesType } from '../../../forms/ContactFeedbackForm/ContactFeedbackForm'\r\nimport { getContactArrayElements } from '../../../redux/selectors/contact-selector'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst ContainerContact: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const contactElements = useSelector(getContactArrayElements)\r\n    const sendMessage = useCallback((message: string) => {\r\n        dispatch(sendMessagesInTelegramChatThunk(message))\r\n    }, [dispatch])\r\n\r\n    const getDataFromForm = useCallback((values: ContactFeedbackFormInitialValuesType) => {\r\n        const { name, description, email } = values\r\n\r\n        const message = `Привет! Это фитбек из портфолио! { Кто написал: ${name} }\r\n        { Её/Его email: ${email} } { Комментарий: ${description} }\r\n        `\r\n        sendMessage(message)\r\n\r\n    }, [sendMessage])\r\n\r\n    return <Contact\r\n        onSubmitContactFeedbackForm={getDataFromForm}\r\n        contactElements={contactElements}\r\n    />\r\n})\r\n\r\n\r\nexport default ContainerContact;","import React, { useMemo } from 'react'\r\nimport { Element } from '../../Element/Element'\r\nimport s from './PortfolioElement.module.scss'\r\nimport { PortfolioInfoListDataType } from '../../../redux/reducers/portfolio-reducer'\r\n\r\ntype PropsType = {\r\n    mainTitle: string\r\n    id?: string\r\n    listsInfo: Array<PortfolioInfoListDataType>\r\n    iframeLink: string\r\n    iframeTitle: string\r\n}\r\n\r\nexport const PortfolioElement: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const {\r\n        mainTitle,\r\n        listsInfo,\r\n        iframeLink,\r\n        iframeTitle, } = props\r\n\r\n    const renderElement = useMemo(() => listsInfo.map(l => {\r\n        return <Element\r\n            key={l.id}\r\n            title={l.keyTitle}\r\n            value={l.valueTitle}\r\n            isLink={l.isLink}\r\n            link={l.link}\r\n        />\r\n    }), [listsInfo])\r\n\r\n    return (\r\n        <div className={s['portfolio__element']}>\r\n            <div className={s['portfolio__element-title']}>{mainTitle}</div>\r\n            <div className={s['portfolio__element-wrap']}>\r\n                <div className={s['portfolio__element-info']}>\r\n                    {\r\n                        renderElement\r\n                    }\r\n                </div>\r\n                <div className={s['portfolio__element-canvas']}>\r\n                    <iframe allowFullScreen src={iframeLink} title={iframeTitle} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, { useMemo } from 'react'\r\nimport { PortfolioInfoProjectDataType } from '../../../redux/reducers/portfolio-reducer'\r\nimport { TitleHeader } from '../../TitleHeader/TitleHeader'\r\nimport { PortfolioElement } from '../PortfolioElement/PortfolioElement'\r\nimport s from './Portfolio.module.scss'\r\n\r\n\r\ntype PropsType = {\r\n    portfolioInfoProjectDatas: Array<PortfolioInfoProjectDataType>\r\n}\r\n\r\nexport const Portfolio: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const { portfolioInfoProjectDatas } = props\r\n\r\n    const renderElements = useMemo(() => portfolioInfoProjectDatas.map(elem => {\r\n\r\n        const { id, iframeLink, iframeTitle, listsInfo, mainTitle } = elem\r\n\r\n        return <PortfolioElement\r\n            key={id}\r\n            iframeLink={iframeLink}\r\n            iframeTitle={iframeTitle}\r\n            listsInfo={listsInfo}\r\n            mainTitle={mainTitle}\r\n        />\r\n    }), [portfolioInfoProjectDatas])\r\n\r\n    return (\r\n        <div className={s.portfolio}>\r\n            <div className={s.portfolio__wrap}>\r\n                <TitleHeader\r\n                    title={'My portfolio'}\r\n                    subtitle={'In theory, theory and practice are inseparable. In practice, this is not the case.'}\r\n                />\r\n                <div className={s.portfolio__content}>\r\n                    {\r\n                        renderElements\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import { AppStateType } from '../store'\r\n\r\n\r\nexport const getPortfolioInfoProjectDatasSelector = (state: AppStateType) => state.portfolioReducer.portfolioInfoProjectDatas\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Portfolio } from './Portfolio'\r\nimport { getPortfolioInfoProjectDatasSelector } from '../../../redux/selectors/portfolio-selector'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nconst ContainerPortfolio: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const portfolioInfoProjectDatas = useSelector(getPortfolioInfoProjectDatasSelector)\r\n\r\n    return <Portfolio portfolioInfoProjectDatas={portfolioInfoProjectDatas} />\r\n})\r\n\r\nexport default ContainerPortfolio","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { PATH } from './Route'\r\nimport './App.scss';\r\nimport { Home } from './components//pages/Home/Home';\r\nimport { ErrorPath } from './components/utils/ErrorPath/ErrorPath'\r\nimport { ContainerNavigation } from './components/Navigation/ContainerNavigation';\r\nimport ContainerAbout from './components/pages/About/ContainerAbout';\r\nimport ContainerContact from './components/pages/Contact/ContainerContact';\r\nimport ContainerPortfolio from './components/pages/Portfolio/ContainerPortfolio';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <ContainerNavigation />\r\n      <div className=\"app__wrap\">\r\n        <div className=\"app__content\">\r\n          <Switch>\r\n            <Route exact path={'/'} render={() => <Redirect to={PATH.home} />} />\r\n            <Route exact path={PATH.home} render={() => <Home />} />\r\n            <Route exact path={PATH.about} render={() => <ContainerAbout />} />\r\n            <Route exact path={PATH.portfolio} render={() => <ContainerPortfolio />} />\r\n            <Route exact path={PATH.contact} render={() => <ContainerContact />} />\r\n            <Route render={() => <ErrorPath children={'Error path!'} />} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { v4 } from \"uuid\"\r\nimport { InferActionsTypes } from \"../store\"\r\n\r\nexport type PortfolioInfoListDataType = {\r\n    keyTitle: string\r\n    valueTitle: string\r\n    isLink?: boolean\r\n    link?: string\r\n    id: string\r\n}\r\n\r\nexport type PortfolioInfoProjectDataType = {\r\n    mainTitle: string\r\n    id: string\r\n    listsInfo: Array<PortfolioInfoListDataType>\r\n    iframeLink: string\r\n    iframeTitle: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    portfolioInfoProjectDatas: Array<PortfolioInfoProjectDataType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    portfolioInfoProjectDatas: [\r\n        {\r\n            mainTitle: \"ClickMeGame\",\r\n            id: v4(),\r\n            listsInfo: [\r\n                {\r\n                    keyTitle: \"Link\",\r\n                    valueTitle: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n                    isLink: true,\r\n                    link: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"GitHub\",\r\n                    valueTitle: \"https://github.com/Mirudistok32/ClickMeGame/\",\r\n                    isLink: true,\r\n                    link: \"https://github.com/Mirudistok32/ClickMeGame/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Description\",\r\n                    valueTitle: \"ClickMeGame - это мини-игра, цель которой узнать, сколько вы успеете кликнуть по кнопке 'Click' за 10 секунд\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Technologies\",\r\n                    valueTitle: \"#react, #javascript, #html, #css, #hooks\",\r\n                    id: v4(),\r\n                },\r\n            ],\r\n            iframeTitle: \"ClickMeGame\",\r\n            iframeLink: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n        },\r\n        {\r\n            mainTitle: \"ClickMeGame\",\r\n            id: v4(),\r\n            listsInfo: [\r\n                {\r\n                    keyTitle: \"Link\",\r\n                    valueTitle: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n                    isLink: true,\r\n                    link: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"GitHub\",\r\n                    valueTitle: \"https://github.com/Mirudistok32/ClickMeGame/\",\r\n                    isLink: true,\r\n                    link: \"https://github.com/Mirudistok32/ClickMeGame/\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Description\",\r\n                    valueTitle: \"ClickMeGame - это мини-игра, цель которой узнать, сколько вы успеете кликнуть по кнопке 'Click' за 10 секунд\",\r\n                    id: v4(),\r\n                },\r\n                {\r\n                    keyTitle: \"Technologies\",\r\n                    valueTitle: \"#react, #javascript, #html, #css, #hooks\",\r\n                    id: v4(),\r\n                },\r\n            ],\r\n            iframeTitle: \"ClickMeGame\",\r\n            iframeLink: \"https://mirudistok32.github.io/ClickMeGame/\",\r\n        },\r\n    ],\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsPortfolioReducer>\r\n\r\n\r\nexport const portfolioReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsPortfolioReducer = {\r\n\r\n}","import { v4 } from \"uuid\"\r\nimport { InferActionsTypes } from \"../store\"\r\n\r\nexport type InfoDataType = {\r\n    key: string\r\n    value: string\r\n    id: string\r\n}\r\n\r\nexport type ListSkillsDataType = {\r\n    id: string\r\n    title: string\r\n    backgroundColor: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    infoDates: Array<InfoDataType>\r\n    listSkillsDates: Array<ListSkillsDataType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    infoDates: [\r\n        { key: 'First Name', value: 'Stanislav', id: v4() },\r\n        { key: 'Last Name', value: 'Postnikov', id: v4() },\r\n        { key: 'Birthdate', value: '31 may 1996', id: v4() },\r\n        { key: 'Phone', value: '+7 951 659 01 65', id: v4() },\r\n        { key: 'Nationality', value: 'Russion', id: v4() },\r\n        { key: 'Adress', value: 'Sankt-Petersburg', id: v4() },\r\n        { key: 'Experience', value: '1 year', id: v4() },\r\n        { key: 'Langages', value: 'Russion, English', id: v4() },\r\n        { key: 'Email', value: 'mirudistok32@gmail.com', id: v4() },\r\n        // { key: 'Vk', value: 'https://vk.com/mirudistok', id: v4() },\r\n        // { key: 'Telegram', value: 'https://t.me/mirudistok', id: v4() }\r\n    ],\r\n    listSkillsDates: [\r\n        { title: '<React />', backgroundColor: 'dodgerblue', id: v4() },\r\n        { title: 'createStore(Redux)', backgroundColor: 'mediumslateblue', id: v4() },\r\n        { title: '{ javascript }', backgroundColor: 'gold', id: v4() },\r\n        { title: 'type Typescript', backgroundColor: 'deepskyblue', id: v4() },\r\n        { title: 'css {}', backgroundColor: 'moccasin', id: v4() },\r\n        { title: '<html></html>', backgroundColor: 'chocolate', id: v4() },\r\n        { title: 'Storybook.stories', backgroundColor: 'deeppink', id: v4() },\r\n        { title: \"expect(Jest).toBe('yes')\", backgroundColor: 'coral', id: v4() },\r\n        { title: \".get('https://REST.API')\", backgroundColor: 'lightblue', id: v4() },\r\n        { title: 'GitHub', backgroundColor: 'cornsilk', id: v4() },\r\n    ]\r\n}\r\n\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actionsNavigationReducer>\r\n\r\n\r\nexport const aboutReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'NAVIGATION/TOGGLE-OPEN-NAV-LIST': {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actionsNavigationReducer = {\r\n    toggleOpenNavListAC: (is: boolean) => ({ type: 'NAVIGATION/TOGGLE-OPEN-NAV-LIST', payload: { isOpenNav: is } } as const)\r\n}","import { portfolioReducer } from './reducers/portfolio-reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { navigationReducer } from './reducers/navigation-reducer'\r\nimport { aboutReducer } from './reducers/about-reducer'\r\nimport { contactReducer } from './reducers/contact-reducer'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducers = combineReducers({\r\n    navigationReducer,\r\n    aboutReducer,\r\n    portfolioReducer,\r\n    contactReducer\r\n})\r\n\r\ntype RootReducersType = typeof rootReducers\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__rpeEz\",\"about__wrap\":\"About_about__wrap__2RIa9\",\"about__info-wrap\":\"About_about__info-wrap__3DTfX\",\"about__info-photo\":\"About_about__info-photo__vepuA\",\"about__info-data\":\"About_about__info-data__3OFUP\",\"about__info-data-list\":\"About_about__info-data-list__j3cDv\",\"about__line\":\"About_about__line__2ABDe\",\"about__skills\":\"About_about__skills__ihvjN\",\"about__skills-title\":\"About_about__skills-title__1ibAZ\",\"about__skills-contents-list\":\"About_about__skills-contents-list__3vNn4\",\"about__skills-contents-element\":\"About_about__skills-contents-element__XzCF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__39iwm\",\"contact__wrap\":\"Contact_contact__wrap__37n7a\",\"contact__content\":\"Contact_contact__content__2dMHm\",\"contact__mainlinks\":\"Contact_contact__mainlinks__1Z1RT\",\"contact__link\":\"Contact_contact__link__3t8X8\",\"contact__link-span\":\"Contact_contact__link-span__1U_D0\",\"contact__link-a\":\"Contact_contact__link-a__2tpm6\",\"contact__form\":\"Contact_contact__form__1coNW\",\"contact__form-title\":\"Contact_contact__form-title__3Tpfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__FdEed\",\"navigation__btn\":\"Navigation_navigation__btn__B67a9\",\"navigation__btn-active\":\"Navigation_navigation__btn-active__28gtE\",\"navigation__list\":\"Navigation_navigation__list__fp9RH\",\"navigation__list-active\":\"Navigation_navigation__list-active__3yMSZ\",\"navigation__list-element\":\"Navigation_navigation__list-element__18z6M\",\"navigation__list-element-active\":\"Navigation_navigation__list-element-active__Iqicj\",\"color\":\"Navigation_color__3sCkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__IyEKT\",\"home__wrap\":\"Home_home__wrap__sfOuj\",\"home__photo\":\"Home_home__photo__2A9Rh\",\"home__content\":\"Home_home__content__3YQek\",\"home__content-hi\":\"Home_home__content-hi__VcoxG\",\"home__content-name\":\"Home_home__content-name__3J_4N\",\"home__content-about\":\"Home_home__content-about__3BDme\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio__element\":\"PortfolioElement_portfolio__element__2LWwO\",\"portfolio__element-title\":\"PortfolioElement_portfolio__element-title__3yY14\",\"portfolio__element-wrap\":\"PortfolioElement_portfolio__element-wrap__3fHgD\",\"portfolio__element-info\":\"PortfolioElement_portfolio__element-info__1q0Ie\",\"portfolio__element-canvas\":\"PortfolioElement_portfolio__element-canvas__3qoc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-path\":\"ErrorPath_error-path__yVmX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Subtitle_title__31ojp\",\"title__line\":\"Subtitle_title__line__2-CaY\",\"title__text\":\"Subtitle_title__text___Zg5y\"};","module.exports = __webpack_public_path__ + \"static/media/photoForAvatar.384a8094.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFeedbackForm_form__1LYrf\",\"form__row\":\"ContactFeedbackForm_form__row__bplf7\",\"form__row-error\":\"ContactFeedbackForm_form__row-error__2k1ao\",\"form__email\":\"ContactFeedbackForm_form__email__QNoq4\",\"form__name\":\"ContactFeedbackForm_form__name___htJL\",\"form__description\":\"ContactFeedbackForm_form__description__1pgS3\",\"form__title\":\"ContactFeedbackForm_form__title__Qb3zx\",\"form__title-error\":\"ContactFeedbackForm_form__title-error__1X6Yz\",\"form__description-error\":\"ContactFeedbackForm_form__description-error__10Aew\",\"form__name-error\":\"ContactFeedbackForm_form__name-error__TalfG\",\"form__button\":\"ContactFeedbackForm_form__button__2m_iH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Images_image__RkmrE\",\"image__link\":\"Images_image__link__1ySFM\",\"image__photo\":\"Images_image__photo__2kmQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"down-arrow\":\"DownArrowSVG_down-arrow__3MjOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2MsYX\",\"title__second\":\"Title_title__second__33PSs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfolio\":\"Portfolio_portfolio__1m80j\",\"portfolio__wrap\":\"Portfolio_portfolio__wrap__3QxTv\",\"portfolio__content\":\"Portfolio_portfolio__content__2udcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleHeader_title__1D2sg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"Element_element__16iu3\"};"],"sourceRoot":""}